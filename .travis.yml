language: php
php:
  # Alias de la version 5.2.17
  #- "5.2"
  # Alias de la version 5.3.x
  - "5.3"
  # Alias de la version 5.4.x
  #- "5.4"
  # Alias de la version 5.5.x
  #- "5.5"
  # Alias de la version 5.6.x
  #- "5.6"
  # Alias lenguaje Hack de facebook
  #- hhvm

# Especificacion opcional de variables de entorno, por ejemplo para bases de datos
env:
#  - SYMFONY_VERSION="2.0.*" DB=mysql
#  - SYMFONY_VERSION="dev-master" DB=mysql
#  - DB=pgsql
#  - DB=mongodb
  - DB=mysql

# Configura notificaciones (email, IRC, campfire etc)
notifications:
#  irc: "irc.freenode.org#yourfavouriteroomfortravis"
  email: "unix4you2@gmail.com"

# Lista de ramas que no sera tenidas en cuenta
branches:
  except:
    - MedidorDeVelocidad
    - gh-pages
    - HabilitacionAuditorias
    - AcordeonOpcionesCentrales
    - SeguimientoGA
    - ImplementacionBootStrap
    - SubFormularios
    - PruebasDeSoftware    

# Ramas del repositorio a tener en cuenta
branches:
  only:
    - master
# Mediante expresiones regulares
#    - /^deploy-.*$/

#before_install:
# Comandos para preparar el sistema antes de las pruebas para instalar prerequisitos o dependencias
#ls -al

#install:
# Comandos para instalar prerequisitos o dependencias
#pwd

# Ejecuta scripts antes de correr las pruebas, puede utilizar variables de entorno
before_script:
  
  #Creamos la base de datos para la instalacion de prueba
  - sh -c "mysql -e 'create database practico;'"

  #Creamos el directorio de pruebas en caso de no existir
  #- mkdir dev_tools/tests
  
  #Asegura permisos completos en la carpeta de pruebas
  - chmod -R 777 dev_tools/tests

  #Genera archivo temporal con configuracion de base de datos
  - echo "<?php
		$ServidorBD='127.0.0.1';
		$BaseDatos='practico';
		$UsuarioBD='root';
		$PasswordBD='';
		$MotorBD='mysql';
		$PuertoBD='';
		
		$TablasCore='core_';
		$TablasApp='app_';"  >  dev_tools/tests/configuracion.php

#  - if [[ "$DB" == "pgsql" ]]; then psql -c "DROP DATABASE IF EXISTS hello_world_test;" -U postgres; fi
#  - if [[ "$DB" == "pgsql" ]]; then psql -c "create database hello_world_test;" -U postgres; fi
#  - if [[ "$DB" == "mysql" ]]; then mysql -e "create database IF NOT EXISTS hello_world_test;" -uroot; fi

# Comandos para construir.  Todos deben retornar cero, cualquier otra salida se considera una falla
script:
  - dev_tools/parche2zip.sh
  - dev_tools/practico2zip.sh
  - php dev_tools/tests/t_obsoletas.php
  - php dev_tools/tests/t_basedatos.php

# Comandos a ejecutar cuando se finaliza la consutrccion sin problemas
#after_success

# Comandos a ejecutar cuando se obtuvo algun error
#after_failure

# Comandos finales a ejecutar despues de ejecutar script: con exito
#after_script
